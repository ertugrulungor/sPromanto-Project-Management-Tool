.bounce-effect {
  /*visibility: visible;*/
  display: block;
  -webkit-animation: bounce-1 0.6s;
  animation: bounce-1 0.6s; }

.slide-down-up-effect {
  /*visibility: visible;*/
  display: block;
  -webkit-animation: slide-down-up 0.6s;
  animation: slide-down-up 0.6s; }

.slide-up-down-effect {
  /*visibility: visible;*/
  display: block;
  -webkit-animation: slide-up-down 0.6s;
  animation: slide-up-down 0.6s; }

.slide-right-left-effect {
  /*visibility: visible;*/
  display: block;
  -webkit-animation: slide-right-left 0.6s;
  animation: slide-right-left 0.6s; }

.slide-left-right-effect {
  /*visibility: visible;*/
  display: block;
  -webkit-animation: slide-left-right 0.6s;
  animation: slide-left-right 0.6s; }

.default-effect {
  /*visibility: visible;*/
  display: block;
  -webkit-animation: default-effect 0.6s ease-in-out;
  animation: default-effect 0.6s ease-in-out; }

.flip-effect {
  /*visibility: visible;*/
  display: block;
  -webkit-animation: flip-effect 0.8s ease-in-out;
  animation: flip-effect 0.8s ease-in-out; }

.transformation-effect {
  /*visibility: visible;*/
  display: block;
  -webkit-animation: transformation-effect 0.8s ease;
  animation: transformation-effect 0.8s ease; }

/********************

    SCROLL EFFECTS

********************/
@-webkit-keyframes bounce-1 {
  0% {
    opacity: 0;
    -webkit-transform: scale(0.5); }
  60% {
    opacity: 1;
    -webkit-transform: scale(1.2); }
  100% {
    -webkit-transform: scale(1); } }

@keyframes bounce-1 {
  0% {
    opacity: 0;
    -webkit-transform: scale(0.5);
    transform: scale(0.5); }
  60% {
    opacity: 1;
    -webkit-transform: scale(1.2);
    transform: scale(1.2); }
  100% {
    -webkit-transform: scale(1);
    transform: scale(1); } }

@-webkit-keyframes slide-down-up {
  0% {
    opacity: 0;
    -webkit-transform: translateY(20px);
    transform: translateY(20px); }
  60% {
    opacity: 1;
    -webkit-transform: translateY(-20px);
    transform: translateY(-20px); }
  100% {
    -webkit-transform: translateY(0);
    transform: translateY(0); } }

@keyframes slide-down-up {
  0% {
    opacity: 0;
    -webkit-transform: translateY(20px);
    transform: translateY(20px); }
  60% {
    opacity: 1;
    -webkit-transform: translateY(-20px);
    transform: translateY(-20px); }
  100% {
    -webkit-transform: translateY(0);
    transform: translateY(0); } }

@-webkit-keyframes slide-up-down {
  0% {
    opacity: 0;
    -webkit-transform: translateY(-30px);
    transform: translateY(-30px); }
  60% {
    opacity: 1;
    -webkit-transform: translateY(30px);
    transform: translateY(30px); }
  100% {
    -webkit-transform: translateY(0);
    transform: translateY(0); } }

@keyframes slide-up-down {
  0% {
    opacity: 0;
    -webkit-transform: translateY(-30px);
    transform: translateY(-30px); }
  60% {
    opacity: 1;
    -webkit-transform: translateY(30px);
    transform: translateY(30px); }
  100% {
    -webkit-transform: translateY(0);
    transform: translateY(0); } }

@-webkit-keyframes slide-right-left {
  0% {
    opacity: 0;
    -webkit-transform: translateX(20px);
    transform: translateX(20px); }
  60% {
    opacity: 1;
    -webkit-transform: translateX(-20px);
    transform: translateX(-20px); }
  100% {
    -webkit-transform: translateX(0);
    transform: translateX(0); } }

@keyframes slide-right-left {
  0% {
    opacity: 0;
    -webkit-transform: translateX(20px);
    transform: translateX(20px); }
  60% {
    opacity: 1;
    -webkit-transform: translateX(-20px);
    transform: translateX(-20px); }
  100% {
    -webkit-transform: translateX(0);
    transform: translateX(0); } }

@-webkit-keyframes slide-left-right {
  0% {
    opacity: 0;
    -webkit-transform: translateX(-20px);
    transform: translateX(-20px); }
  60% {
    opacity: 1;
    -webkit-transform: translateX(20px);
    transform: translateX(20px); }
  100% {
    -webkit-transform: translateX(0);
    transform: translateX(0); } }

@keyframes slide-left-right {
  0% {
    opacity: 0;
    -webkit-transform: translateX(-20px);
    transform: translateX(-20px); }
  60% {
    opacity: 1;
    -webkit-transform: translateX(20px);
    transform: translateX(20px); }
  100% {
    -webkit-transform: translateX(0);
    transform: translateX(0); } }

@-webkit-keyframes default-effect {
  0% {
    -webkit-perspective: 150;
    -ms-perspective: 150;
    perspective: 150;
    -webkit-transform: rotateX(15deg);
    transform: rotateX(15deg);
    opacity: 0;
    filter: alpha(opacity=0); }
  60% {
    -webkit-transform: rotateX(7deg);
    transform: rotateX(7deg);
    opacity: 1;
    filter: alpha(opacity=100); }
  100% {
    -webkit-transform: rotateX(0);
    transform: rotateX(0); } }

@keyframes default-effect {
  0% {
    -webkit-perspective: 150;
    -ms-perspective: 150;
    perspective: 150;
    -webkit-transform: rotateX(15deg);
    transform: rotateX(15deg);
    opacity: 0;
    filter: alpha(opacity=0); }
  60% {
    -webkit-transform: rotateX(7deg);
    transform: rotateX(7deg);
    opacity: 1;
    filter: alpha(opacity=100); }
  100% {
    -webkit-transform: rotateX(0);
    transform: rotateX(0); } }

@-webkit-keyframes flip-effect {
  0% {
    -webkit-transform: rotateY(180deg);
    -webkit-transform-style: preserve-3d;
    transform: rotateY(180deg);
    transform-style: preserve-3d; }
  /*60% {
       -webkit-transform: rotateY(-180deg);
        -webkit-transform-style: preserve-3d;
        -moz-transform: rotateY(-180deg);
        -ms-transform: rotateY(-180deg);
        -o-transform: rotateY(-180deg);
        transform: rotateY(-180deg);
        transform-style: preserve-3d;
    }*/
  100% {
    -webkit-transform: rotateY(0);
    -webkit-transform-style: preserve-3d;
    transform: rotateY(0);
    transform-style: preserve-3d; } }

@keyframes flip-effect {
  0% {
    -webkit-transform: rotateY(180deg);
    -webkit-transform-style: preserve-3d;
    transform: rotateY(180deg);
    transform-style: preserve-3d; }
  /*60% {
       -webkit-transform: rotateY(-180deg);
        -webkit-transform-style: preserve-3d;
        -moz-transform: rotateY(-180deg);
        -ms-transform: rotateY(-180deg);
        -o-transform: rotateY(-180deg);
        transform: rotateY(-180deg);
        transform-style: preserve-3d;
    }*/
  100% {
    -webkit-transform: rotateY(0);
    -webkit-transform-style: preserve-3d;
    transform: rotateY(0);
    transform-style: preserve-3d; } }

@-webkit-keyframes transformation-effect {
  0% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg); }
  /*60% {
              -webkit-transform: rotate(360deg);
        -moz-transform: rotate(360deg);
        -ms-transform: rotate(360deg);
        -o-transform: rotate(360deg);
        transform: rotate(360deg);
    }*/
  100% {
    -webkit-transform: rotate(0);
    transform: rotate(0); } }

@keyframes transformation-effect {
  0% {
    -webkit-transform: rotate(360deg);
    transform: rotate(360deg); }
  /*60% {
              -webkit-transform: rotate(360deg);
        -moz-transform: rotate(360deg);
        -ms-transform: rotate(360deg);
        -o-transform: rotate(360deg);
        transform: rotate(360deg);
    }*/
  100% {
    -webkit-transform: rotate(0);
    transform: rotate(0); } }

/*

    Common Style

*/
.tsf-container::after,
.tsf-wizard::after {
  content: "";
  display: table;
  clear: both; }

.tsf-nav-step ul .number {
  font-size: 1.2rem; }

.tsf-nav-step ul li > * .desc span {
  font-size: 90%; }

.tsf-step {
  display: none;
  /*visibility:hidden;*/ }
  .tsf-step.active {
    /*visibility:visible;*/
    display: block; }

.tsf-content {
  width: 100%;
  display: block;
  padding: 1rem;
  margin-bottom: 1.5rem;
  border: 0;
  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.05), 0 1px 1px rgba(0, 0, 0, 0.05);
  border-radius: 2px;
  background-color: white; }
  .tsf-content input.error {
    border: 1px solid #d26d54; }
  .tsf-content label.error {
    color: #d26d54;
    font-style: italic; }

.tsf-controls {
  padding: 0;
  margin-bottom: 1.5rem; }
  .tsf-controls .tsf-wizard-btn {
    color: white;
    background-color: #4c7ff0;
    border-color: #4c7ff0;
    box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.15), 0 1px 1px rgba(0, 0, 0, 0.075); }
    .tsf-controls .tsf-wizard-btn:hover {
      color: white;
      background-color: #1d5dec;
      border-color: #1457eb; }
    .tsf-controls .tsf-wizard-btn:focus, .tsf-controls .tsf-wizard-btn.focus {
      color: white;
      background-color: #1d5dec;
      border-color: #1457eb; }
    .tsf-controls .tsf-wizard-btn:active, .tsf-controls .tsf-wizard-btn.active,
    .open > .tsf-controls .tsf-wizard-btn.dropdown-toggle {
      color: white;
      background-color: #1d5dec;
      border-color: #1457eb;
      background-image: none;
      box-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125); }
      .tsf-controls .tsf-wizard-btn:active:hover, .tsf-controls .tsf-wizard-btn:active:focus, .tsf-controls .tsf-wizard-btn:active.focus, .tsf-controls .tsf-wizard-btn.active:hover, .tsf-controls .tsf-wizard-btn.active:focus, .tsf-controls .tsf-wizard-btn.active.focus,
      .open > .tsf-controls .tsf-wizard-btn.dropdown-toggle:hover,
      .open > .tsf-controls .tsf-wizard-btn.dropdown-toggle:focus,
      .open > .tsf-controls .tsf-wizard-btn.dropdown-toggle.focus {
        color: white;
        background-color: #124ed4;
        border-color: #0f40ae; }
    .tsf-controls .tsf-wizard-btn.disabled:focus, .tsf-controls .tsf-wizard-btn.disabled.focus, .tsf-controls .tsf-wizard-btn:disabled:focus, .tsf-controls .tsf-wizard-btn:disabled.focus {
      background-color: #4c7ff0;
      border-color: #4c7ff0; }
    .tsf-controls .tsf-wizard-btn.disabled:hover, .tsf-controls .tsf-wizard-btn:disabled:hover {
      background-color: #4c7ff0;
      border-color: #4c7ff0; }
    .tsf-controls .tsf-wizard-btn.btn-right {
      float: right; }

.tsf-nav-step ul a {
  text-decoration: none !important; }

.tsf-nav-step ul .desc {
  padding-top: 0; }

.tsf-nav-step ul label {
  margin-bottom: 0 !important; }

.tsf-nav-step .tsf-nav {
  -webkit-transition: all 1000ms;
  transition: all 1000ms;
  position: absolute; }

.tsf-nav-many-steps {
  height: 100px;
  overflow: hidden;
  width: 100%;
  position: relative; }

@media only screen and (min-width: 768px) {
  .tsf-left-container,
  .tsf-right-container {
    width: 66.66666667%;
    float: left; }
  .tsf-right-nav-step,
  .tsf-left-nav-step {
    float: left;
    width: 33.33333333%; }
  .tsf-right-nav-step {
    float: right; }
  .tsf-right-nav-step .gsi-vertical {
    padding-left: 3rem !important; }
  .tsf-left-nav-step .gsi-vertical {
    padding-right: 3rem !important; } }

.tsf-right-nav-step .gsi-vertical {
  margin: 0 !important;
  width: 100% !important; }
  .tsf-right-nav-step .gsi-vertical.gsi-step-indicator.triangle li:first-child {
    margin-top: 0; }

.tsf-left-nav-step .gsi-vertical {
  margin: 0 !important;
  width: 100% !important; }
  .tsf-left-nav-step .gsi-vertical.gsi-step-indicator.triangle li:first-child {
    margin-top: 0; }

.tsf-wizard .tsf-nav-step label {
  cursor: pointer !important; }

.tsf-wizard.not-show-num .tsf-nav-step .number {
  display: none; }

.tsf-wizard.bottom {
  display: -webkit-box;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-flow: column;
  flex-flow: column; }
  .tsf-wizard.bottom .tsf-bottom-container {
    -webkit-box-ordinal-group: 2;
    -moz-order: 1;
    -ms-flex-order: 1;
    order: 1;
    display: -webkit-box;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-flow: column;
    flex-flow: column; }
  .tsf-wizard.bottom .tsf-bottom-nav-step {
    -webkit-box-ordinal-group: 3;
    -moz-order: 2;
    -ms-flex-order: 2;
    order: 2; }
  .tsf-wizard.bottom .tsf-controls {
    -webkit-box-ordinal-group: 2;
    -moz-order: 1;
    -ms-flex-order: 1;
    order: 1; }
  .tsf-wizard.bottom .tsf-content {
    -webkit-box-ordinal-group: 3;
    -moz-order: 2;
    -ms-flex-order: 2;
    order: 2; }

input.parsley-success,
select.parsley-success,
textarea.parsley-success {
  background-color: #d7eccc;
  border-color: #cee8c1;
  color: #4f8732; }
  input.parsley-success hr,
  select.parsley-success hr,
  textarea.parsley-success hr {
    border-top-color: #bfe1ae; }
  input.parsley-success .alert-link,
  select.parsley-success .alert-link,
  textarea.parsley-success .alert-link {
    color: #396224; }

input.parsley-error,
select.parsley-error,
textarea.parsley-error {
  background-color: #f2d4cd;
  border-color: #efcac1;
  color: #983e28; }
  input.parsley-error hr,
  select.parsley-error hr,
  textarea.parsley-error hr {
    border-top-color: #e9b9ad; }
  input.parsley-error .alert-link,
  select.parsley-error .alert-link,
  textarea.parsley-error .alert-link {
    color: #702e1d; }

.parsley-errors-list {
  margin: 2px 0 3px;
  padding: 0;
  list-style-type: none;
  font-size: 0.9em;
  line-height: 0.9em;
  opacity: 0;
  transition: all .3s ease-in;
  -o-transition: all .3s ease-in;
  -moz-transition: all .3s ease-in;
  -webkit-transition: all .3s ease-in; }

.parsley-errors-list.filled {
  opacity: 1; }

/*# sourceMappingURL=data:application/json;base64, */
